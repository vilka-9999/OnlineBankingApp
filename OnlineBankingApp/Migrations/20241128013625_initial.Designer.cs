// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineBankingApp.Models;

#nullable disable

namespace OnlineBankingApp.Migrations
{
    [DbContext(typeof(OnlineBankingAppContext))]
    [Migration("20241128013625_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineBankingApp.Models.Account", b =>
                {
                    b.Property<int?>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("AccountId"));

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("AccountNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("BankId");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            AccountBalance = 100m,
                            AccountNumber = 2000000000000000L,
                            AccountType = "Saving",
                            BankId = 1,
                            UserId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            AccountBalance = 1m,
                            AccountNumber = 1111111111111111L,
                            AccountType = "Saving",
                            BankId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("OnlineBankingApp.Models.Advisor", b =>
                {
                    b.Property<int?>("AdvisorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("AdvisorId"));

                    b.Property<string>("AdvisorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvisorPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientsNumber")
                        .HasColumnType("int");

                    b.HasKey("AdvisorId");

                    b.ToTable("Advisors");

                    b.HasData(
                        new
                        {
                            AdvisorId = 1,
                            AdvisorEmail = "Test@gmail.com",
                            AdvisorName = "TestAN",
                            AdvisorPhone = "1234567890",
                            ClientsNumber = 1
                        });
                });

            modelBuilder.Entity("OnlineBankingApp.Models.Bank", b =>
                {
                    b.Property<int?>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("BankId"));

                    b.Property<string>("BankCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankId");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            BankId = 1,
                            BankCountry = "USA",
                            BankName = "Bank of America",
                            BankType = "National"
                        },
                        new
                        {
                            BankId = 2,
                            BankCountry = "USA",
                            BankName = "Chase Bank",
                            BankType = "National"
                        });
                });

            modelBuilder.Entity("OnlineBankingApp.Models.LogInModels.LoginViewModel", b =>
                {
                    b.Property<string>("EmailOrUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("LoginViewModel");
                });

            modelBuilder.Entity("OnlineBankingApp.Models.LogInModels.RegistrationViewModel", b =>
                {
                    b.Property<string>("ConfirmPaword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("RegistrationViewModel");
                });

            modelBuilder.Entity("OnlineBankingApp.Models.Transfer", b =>
                {
                    b.Property<int?>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TransferId"));

                    b.Property<int?>("ReceiverAccountId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SenderAccountId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("TransferAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransferId");

                    b.HasIndex("ReceiverAccountId");

                    b.HasIndex("SenderAccountId");

                    b.ToTable("Transfers");

                    b.HasData(
                        new
                        {
                            TransferId = 1,
                            ReceiverAccountId = 1,
                            SenderAccountId = 1,
                            TransferAmount = 1,
                            TransferDate = new DateTime(2024, 11, 28, 1, 36, 24, 681, DateTimeKind.Utc).AddTicks(7912)
                        });
                });

            modelBuilder.Entity("OnlineBankingApp.Models.User", b =>
                {
                    b.Property<int?>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("UserId"));

                    b.Property<int?>("AdvisorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("AdvisorId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AdvisorId = 1,
                            Email = "1@gmail.com",
                            FirstName = "name1",
                            LastName = "name2",
                            Password = "TestUP",
                            Username = "TestUU"
                        });
                });

            modelBuilder.Entity("OnlineBankingApp.Models.Account", b =>
                {
                    b.HasOne("OnlineBankingApp.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineBankingApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineBankingApp.Models.Transfer", b =>
                {
                    b.HasOne("OnlineBankingApp.Models.Account", "ReceiverAccount")
                        .WithMany()
                        .HasForeignKey("ReceiverAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineBankingApp.Models.Account", "SenderAccount")
                        .WithMany()
                        .HasForeignKey("SenderAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReceiverAccount");

                    b.Navigation("SenderAccount");
                });

            modelBuilder.Entity("OnlineBankingApp.Models.User", b =>
                {
                    b.HasOne("OnlineBankingApp.Models.Advisor", "Advisor")
                        .WithMany()
                        .HasForeignKey("AdvisorId");

                    b.Navigation("Advisor");
                });
#pragma warning restore 612, 618
        }
    }
}
